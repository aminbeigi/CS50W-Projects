[{"C:\\projects\\CS50W-Projects\\src\\Project 4\\app\\src\\index.js":"1"},{"size":4468,"mtime":1612010058631,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"7x2z0w","C:\\projects\\CS50W-Projects\\src\\Project 4\\app\\src\\index.js",["7"],"import { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Button, Breadcrumb, Card, Container } from 'react-bootstrap';\n\nconst API_URL = 'http://localhost:8000';\nconst PAGE_POST_LIMIT = 5;\n\nconst postData = e => {\n    const title = e.target[0].value;\n    const body = e.target[1].value;\n    const data = {\n        'user': 'George',\n        'title': title,\n        'body': body,\n    }\n    console.log(data);\n    \n    fetch(API_URL + '/create-post', {\n        method: 'POST',\n        body: JSON.stringify(data),\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });    \n\n    e.target[0].value = '';\n    e.target[1].value = '';\n    e.preventDefault();\n}\n\nconst CreateNewPost = () => {\n    return (\n        <section>\n            <Card>\n            <Card.Header as=\"h5\">Create new post</Card.Header>\n                <Card.Body>\n                    <form onSubmit={postData}>\n                    <Card.Title>title: <input type=\"text\"></input></Card.Title>\n                    <Card.Text>Body: <textarea rows=\"4\" cols=\"40\"></textarea></Card.Text>\n                    <Button type=\"submit\" variant=\"primary\" >Post</Button>\n                    </form>\n                </Card.Body>\n            </Card>\n        </section>\n    )\n}\nconst Post = ({title, body, user, timestamp}) => {\n    return (\n        <section>\n            <Card>\n                <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">by {user}</Card.Subtitle>\n                    <Card.Text>{body}</Card.Text>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{timestamp}</Card.Subtitle>\n                </Card.Body>\n            </Card>\n        </section>\n    )\n}\n\nconst NavBar = () => {\n    return (\n        <div>\n            <Breadcrumb>\n                <Breadcrumb.Item active>Home</Breadcrumb.Item>\n                <Breadcrumb.Item href=\"#\">All Posts</Breadcrumb.Item>\n            </Breadcrumb>\n        </div>\n    )\n}\n\nclass Index extends Component {\n    state = {\n        data: [],\n        loading: false,\n        currentPostCount: 0,\n        totalPostCount: 0,\n        atBottomPage: false\n    }\n\n        handleScroll = (e) => {\n            const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n            if (bottom) {\n                document.querySelector('body').style.background = 'green';\n            } else {\n                document.querySelector('body').style.background = 'white';\n            }\n        }\n\n    componentDidMount() {\n        console.log(\"The component is now mounted!\")\n        this.setState({loading: true})\n        fetch(API_URL + '/posts')\n            .then(response => response.json())\n            .then(response => this.setState({data: response, loading: false}))\n            .catch(() => console.log(`Can't access ${API_URL + '/posts'} response.`))\n\n        this.setState({currentPostCount: 5});\n        const dataLength = this.state.data.length\n        this.setState({totalPostCount: dataLength});\n\n        // event listeners\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentDidUpdate() {\n        console.log(\"The component just updated\")\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <Container>\n                    <br></br>\n                    <CreateNewPost />\n                    <br></br>\n                    <h1>All Posts</h1>\n                    {this.loading\n                        ? \"loading...\"\n                        : <div>\n                            {this.state.data.map((post, i) => {\n                                return(\n                                    <div key={i}>\n                                        <Post key={i} title={post['title']} body={post['body']} user={post['user']} timestamp={post['timestamp']} />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    }\n                </Container>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Index />,\n    document.getElementById('root')\n);",{"ruleId":"8","severity":1,"message":"9","line":10,"column":7,"nodeType":"10","messageId":"11","endLine":10,"endColumn":22},"no-unused-vars","'PAGE_POST_LIMIT' is assigned a value but never used.","Identifier","unusedVar"]